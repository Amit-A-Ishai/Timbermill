# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Test Timbermill
    runs-on: ubuntu-latest
    env:
      LOCATION_IN_DISK: ./
    steps:
    - name: Configure sysctl limits
      run: |
        sudo swapoff -a
        sudo sysctl -w vm.swappiness=1
        sudo sysctl -w fs.file-max=262144
        sudo sysctl -w vm.max_map_count=262144

    - uses: getong/elasticsearch-action@v1.2
      with:
        elasticsearch version: '7.6.1'
        host port: 9200
        container port: 9200
        host node port: 9300
        node port: 9300
        discovery type: 'single-node'
      
    - uses: actions/checkout@v2
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build with Maven
      run: mvn -B package -DskipTests --file timbermill-java/pom.xml
    - run: mkdir jar & cp timbermill-java/timbermill-server/target/timbermill-server-*.jar timbermill-java/jars/timbermill-server.jar 
    - name: Run Timbermill Server
      run: java -jar timbermill-java/jars/timbermill-server.jar &
    - name: Run Tests and Deploy
      run: mvn --batch-mode deploy --file timbermill-java/pom.xml
      env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        
